(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{567:function(e,t,r){"use strict";r.r(t);var n=r(34),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"node-js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#node-js"}},[e._v("#")]),e._v(" Node.js")]),e._v(" "),r("p",[e._v("Node.js 是一个开源和跨平台的 JavaScript 运行时环境。"),r("br"),e._v("\nNode.js 在浏览器之外运行 V8 JavaScript 引擎（Google Chrome 的内核）。 这使得 Node.js 非常高效。")]),e._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js 下载"),r("OutboundLink")],1),r("br"),e._v(" "),r("a",{attrs:{href:"http://nodejs.cn/api/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js api文档"),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"全局对象-global"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#全局对象-global"}},[e._v("#")]),e._v(" 全局对象 "),r("a",{attrs:{href:"https://nodejs.cn/api/globals.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("global"),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/timers.html#settimeoutcallback-delay-args",target:"_blank",rel:"noopener noreferrer"}},[e._v("setTimeout"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/timers.html#setintervalcallback-delay-args",target:"_blank",rel:"noopener noreferrer"}},[e._v("setInterval"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/timers.html#setimmediatecallback-args",target:"_blank",rel:"noopener noreferrer"}},[e._v("setImmediate"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/console.html#%E6%8E%A7%E5%88%B6%E5%8F%B0",target:"_blank",rel:"noopener noreferrer"}},[e._v("console"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/modules.html#__dirname",target:"_blank",rel:"noopener noreferrer"}},[e._v("__dirname"),r("OutboundLink")],1),e._v(" 当前模块的目录名")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/modules.html#__filename",target:"_blank",rel:"noopener noreferrer"}},[e._v("__filename"),r("OutboundLink")],1),e._v(" 当前模块的文件名（绝对路径）")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/buffer.html#%E7%BC%93%E5%86%B2%E5%8C%BA",target:"_blank",rel:"noopener noreferrer"}},[e._v("Buffer"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/process.html#%E8%BF%9B%E7%A8%8B%E4%BA%8B%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"}},[e._v("process"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/process.html#processcwd",target:"_blank",rel:"noopener noreferrer"}},[e._v("process.cwd()"),r("OutboundLink")],1),e._v(" 返回 Node.js 进程的当前工作目录")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/process.html#processexitcode",target:"_blank",rel:"noopener noreferrer"}},[e._v("process.exit([code])"),r("OutboundLink")],1),e._v("  指示 Node.js 以 code 的退出状态同步终止进程")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/process.html#processargv",target:"_blank",rel:"noopener noreferrer"}},[e._v("process.argv"),r("OutboundLink")],1),e._v("  属性返回数组，其中包含启动 Node.js 进程时传入的命令行参数")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/process.html#processplatform",target:"_blank",rel:"noopener noreferrer"}},[e._v("process.platform"),r("OutboundLink")],1),e._v("  返回用于标识编译 Node.js 二进制文件的操作系统平台的字符串")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/process.html#processkillpid-signal",target:"_blank",rel:"noopener noreferrer"}},[e._v("process.kill(pid[, signal])"),r("OutboundLink")],1),e._v(" 该方法将 signal 发送到由 pid 标识的进程")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/process.html#processenv",target:"_blank",rel:"noopener noreferrer"}},[e._v("process.env"),r("OutboundLink")],1),e._v(" 该属性返回包含用户环境的对象")])])])]),e._v(" "),r("h2",{attrs:{id:"内置模块-os"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内置模块-os"}},[e._v("#")]),e._v(" 内置模块 "),r("a",{attrs:{href:"https://nodejs.cn/api/os.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("os"),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/os.html#oseol",target:"_blank",rel:"noopener noreferrer"}},[e._v("os.EOL"),r("OutboundLink")],1),e._v("  操作系统特定的行尾标记; Windows 上是 \\r\\n;  OSIX 上是 \\n")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/os.html#osarch",target:"_blank",rel:"noopener noreferrer"}},[e._v("os.arch()"),r("OutboundLink")],1),e._v(" 操作系统 CPU 架构")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/os.html#oscpus",target:"_blank",rel:"noopener noreferrer"}},[e._v("os.cpus()"),r("OutboundLink")],1),e._v(" 返回包含有关每个逻辑 CPU 内核的信息的对象数组")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/os.html#ostotalmem",target:"_blank",rel:"noopener noreferrer"}},[e._v("os.totalmem()"),r("OutboundLink")],1),e._v("  以整数形式返回系统内存总量（以字节为单位）")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/os.html#osfreemem",target:"_blank",rel:"noopener noreferrer"}},[e._v("os.freemem()"),r("OutboundLink")],1),e._v("  以整数形式返回空闲的系统内存量（以字节为单位）")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/os.html#oshomedir",target:"_blank",rel:"noopener noreferrer"}},[e._v("os.homedir()"),r("OutboundLink")],1),e._v(" 返回当前用户的主目录的字符串路径")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/os.html#oshostname",target:"_blank",rel:"noopener noreferrer"}},[e._v("os.hostname()"),r("OutboundLink")],1),e._v(" 以字符串形式返回操作系统的主机名。")])]),e._v(" "),r("h2",{attrs:{id:"内置模块-path"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内置模块-path"}},[e._v("#")]),e._v(" 内置模块 "),r("a",{attrs:{href:"https://nodejs.cn/api/path.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("path"),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/path.html#pathdirnamepath",target:"_blank",rel:"noopener noreferrer"}},[e._v("path.dirname(path)"),r("OutboundLink")],1),e._v(" 返回 path 的目录名")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/path.html#pathbasenamepath-suffix",target:"_blank",rel:"noopener noreferrer"}},[e._v("path.basename(path[, suffix])"),r("OutboundLink")],1),e._v(" 返回 path 的文件名，suffix为要删除的可选后缀")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/path.html#pathextnamepath",target:"_blank",rel:"noopener noreferrer"}},[e._v("path.extname(path)"),r("OutboundLink")],1),e._v(" 返回 path 的扩展名")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/path.html#pathresolvepaths",target:"_blank",rel:"noopener noreferrer"}},[e._v("path.resolve([...paths])"),r("OutboundLink")],1),e._v(" 将路径或路径片段的序列解析为绝对路径")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/path.html#pathjoinpaths",target:"_blank",rel:"noopener noreferrer"}},[e._v("path.join([...paths])"),r("OutboundLink")],1),e._v(" 方法使用特定于平台的分隔符作为定界符将所有给定的 path 片段连接在一起，然后规范化生成的路径")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/path.html#pathsep",target:"_blank",rel:"noopener noreferrer"}},[e._v("path.sep"),r("OutboundLink")],1),e._v(" 提供特定于平台的路径片段分隔符：Windows 上是 "),r("code",[e._v("\\")]),e._v("；POSIX 上是 "),r("code",[e._v("/")])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/path.html#pathdelimiter",target:"_blank",rel:"noopener noreferrer"}},[e._v("path.delimiter"),r("OutboundLink")],1),e._v(" 提供特定于平台的路径定界符: Windows 上是 "),r("code",[e._v(";")]),e._v("；POSIX 上是 "),r("code",[e._v(":")])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/path.html#pathnormalizepath",target:"_blank",rel:"noopener noreferrer"}},[e._v("path.normalize(path)"),r("OutboundLink")],1),e._v(" 方法规范化给定的 path，解析 '..' 和 '.' 片段")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/path.html#pathrelativefrom-to",target:"_blank",rel:"noopener noreferrer"}},[e._v("path.relative(from, to)"),r("OutboundLink")],1),e._v(" 方法根据当前工作目录返回从 from 到 to 的相对路径")])]),e._v(" "),r("h2",{attrs:{id:"内置模块-url"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内置模块-url"}},[e._v("#")]),e._v(" 内置模块 "),r("a",{attrs:{href:"https://nodejs.cn/api/url.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("url"),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"内置模块-util"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内置模块-util"}},[e._v("#")]),e._v(" 内置模块 "),r("a",{attrs:{href:"https://nodejs.cn/api/util.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("util"),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/util.html#utilisdeepstrictequalval1-val2",target:"_blank",rel:"noopener noreferrer"}},[e._v("util.isDeepStrictEqual(val1, val2)"),r("OutboundLink")],1),e._v(" 如果 val1 和 val2 之间存在深度严格相等，则返回 true。 否则，返回 false。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/util.html#utilpromisifyoriginal",target:"_blank",rel:"noopener noreferrer"}},[e._v("util.promisify(original)"),r("OutboundLink")],1),e._v(" 采用遵循常见的错误优先的回调风格的函数（也就是将 (err, value) => ... 回调作为最后一个参数），并返回一个返回 promise 的版本。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/util.html#utilcallbackifyoriginal",target:"_blank",rel:"noopener noreferrer"}},[e._v("util.callbackify(original)"),r("OutboundLink")],1),e._v(" 采用 "),r("code",[e._v("async")]),e._v(" 函数（或返回 "),r("code",[e._v("Promise")]),e._v(" 的函数）并返回遵循错误优先回调风格的函数，即将 "),r("code",[e._v("(err, value) => ...")]),e._v(" 回调作为最后一个参数。 在回调中，第一个参数将是拒绝原因（如果 "),r("code",[e._v("Promise")]),e._v(" 已解决，则为 "),r("code",[e._v("null")]),e._v("），第二个参数将是已解决的值。")])]),e._v(" "),r("h2",{attrs:{id:"内置模块-fs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内置模块-fs"}},[e._v("#")]),e._v(" 内置模块 "),r("a",{attrs:{href:"https://nodejs.cn/api/fs.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("fs"),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/fs.html#fsreadfilepath-options-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("fs.readFile(path[, options], callback)"),r("OutboundLink")],1),e._v(" 读取一个文件")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/fs.html#fswritefilefile-data-options-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("fs.writeFile(file, data[, options], callback)"),r("OutboundLink")],1),e._v(" 像文件写入内容")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/fs.html#fsstatpath-options-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("fs.stat(path[, options], callback)"),r("OutboundLink")],1),e._v("  获取文件或目录信息")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/fs.html#fsreaddirpath-options-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("fs.readdir(path[, options], callback)"),r("OutboundLink")],1),e._v(" 获取目录中的文件和子目录")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/fs.html#fsmkdirpath-options-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("fs.mkdir(path[, options], callback)"),r("OutboundLink")],1),e._v(" 创建目录")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/fs.html#fsrmdirpath-options-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("fs.rmdir(path[, options], callback)"),r("OutboundLink")],1),e._v(" 删除目录")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/fs.html#fsunlinkpath-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("fs.unlink(path, callback)"),r("OutboundLink")],1),e._v(" 删除文件")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/fs.html#fsexistspath-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("fs.exists(path, callback)"),r("OutboundLink")],1),e._v(" 判断文件或目录是否存在 ；"),r("strong",[e._v("已废弃")])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/fs.html#fscreatereadstreampath-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("fs.createReadStream(path[, options])"),r("OutboundLink")],1),e._v(" 文件可读流")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/fs.html#fscreatewritestreampath-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("fs.createWriteStream(path[, options])"),r("OutboundLink")],1),e._v(" 文件可写流")])]),e._v(" "),r("h2",{attrs:{id:"内置模块-stream"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内置模块-stream"}},[e._v("#")]),e._v(" 内置模块 "),r("a",{attrs:{href:"https://nodejs.cn/api/stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("stream"),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/stream.html#%E5%8F%AF%E8%AF%BB%E6%B5%81",target:"_blank",rel:"noopener noreferrer"}},[e._v("Readable"),r("OutboundLink")],1),e._v("  可读流接口")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/stream.html#%E5%8F%AF%E5%86%99%E6%B5%81",target:"_blank",rel:"noopener noreferrer"}},[e._v("Writable"),r("OutboundLink")],1),e._v("  可写流接口")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/stream.html#%E7%B1%BBstreamduplex",target:"_blank",rel:"noopener noreferrer"}},[e._v("Duplex"),r("OutboundLink")],1),e._v("  双工流接口")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/stream.html#%E7%B1%BBstreamtransform",target:"_blank",rel:"noopener noreferrer"}},[e._v("Transform"),r("OutboundLink")],1),e._v(" 转换流接口")])]),e._v(" "),r("h2",{attrs:{id:"内置模块-net"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内置模块-net"}},[e._v("#")]),e._v(" 内置模块 "),r("a",{attrs:{href:"https://nodejs.cn/api/net.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("net"),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/net.html#netcreateconnectionoptions-connectlistener",target:"_blank",rel:"noopener noreferrer"}},[e._v("net.createConnection(options[, connectListener])"),r("OutboundLink")],1),e._v("  客户端创建连接")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://nodejs.cn/api/net.html#netcreateserveroptions-connectionlistener",target:"_blank",rel:"noopener noreferrer"}},[e._v("net.createServer([options][, connectionListener])"),r("OutboundLink")],1),e._v("  创建服务端")])]),e._v(" "),r("h2",{attrs:{id:"内置模块-http"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内置模块-http"}},[e._v("#")]),e._v(" 内置模块 "),r("a",{attrs:{href:"https://nodejs.cn/api/http.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http"),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"内置模块-events"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内置模块-events"}},[e._v("#")]),e._v(" 内置模块 "),r("a",{attrs:{href:"https://nodejs.cn/api/events.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("events"),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[e._v("#")]),e._v(" 生命周期")]),e._v(" "),r("img",{attrs:{src:e.$withBase("/img/course/node1.png"),alt:"生命周期"}}),e._v(" "),r("img",{attrs:{src:e.$withBase("/img/course/node2.png"),alt:"生命周期"}}),e._v(" "),r("h2",{attrs:{id:"node中的orm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#node中的orm"}},[e._v("#")]),e._v(" node中的ORM")]),e._v(" "),r("p",[e._v("ORM（Object Relational Mapping，对象关系映射）：是一种为了解决面向对象与关系数据库存在的互不匹配的现象的技术，通过描述对象和数据库之间映射的元数据，把程序中的对象自动持久化到关系数据库中。")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.sequelize.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("sequelize"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://typeorm.bootcss.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("typeorm"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"node中的日志记录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#node中的日志记录"}},[e._v("#")]),e._v(" node中的日志记录")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.npmjs.com/package/log4js",target:"_blank",rel:"noopener noreferrer"}},[e._v("log4js"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"express"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#express"}},[e._v("#")]),e._v(" express")]),e._v(" "),r("p",[e._v("express是一个快速、独立、极简的Node.js Web 框架。"),r("br"),e._v(" "),r("a",{attrs:{href:"https://express.nodejs.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("express"),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"nodemon"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nodemon"}},[e._v("#")]),e._v(" nodemon")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/remy/nodemon#nodemon",target:"_blank",rel:"noopener noreferrer"}},[e._v("nodemon"),r("OutboundLink")],1),e._v(" 是一个工具，它通过在检测到目录中的文件更改时自动重新启动节点应用程序来帮助开发基于 node.js 的应用程序。")])])}),[],!1,null,null,null);t.default=a.exports}}]);