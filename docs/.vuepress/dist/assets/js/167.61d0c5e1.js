(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{598:function(e,a,t){"use strict";t.r(a);var o=t(34),s=Object(o.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"一个不大不小的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一个不大不小的问题"}},[e._v("#")]),e._v(" 一个不大不小的问题")]),e._v(" "),t("p",[e._v("假设服务器有一个接口，通过请求这个接口，可以添加一个管理员")]),e._v(" "),t("p",[e._v("但是，不是任何人都有权力做这种操作的")]),e._v(" "),t("p",[e._v("那么服务器如何知道请求接口的人是有权力的呢？")]),e._v(" "),t("p",[e._v("答案是：只有登录过的管理员才能做这种操作")]),e._v(" "),t("p",[e._v("可问题是，客户端和服务器的传输使用的是http协议，http协议是无状态的，什么叫无状态，就是"),t("strong",[e._v("服务器不知道这一次请求的人，跟之前登录请求成功的人是不是同一个人")])]),e._v(" "),t("p",[t("img",{attrs:{src:"http://mdrs.yuanjin.tech/img/image-20200417161014030.png",alt:"img"}})]),e._v(" "),t("p",[t("img",{attrs:{src:"http://mdrs.yuanjin.tech/img/image-20200417161244373.png",alt:"img"}})]),e._v(" "),t("p",[e._v("由于http协议的无状态，服务器"),t("strong",[e._v("忘记")]),e._v("了之前的所有请求，它无法确定这一次请求的客户端，就是之前登录成功的那个客户端。")]),e._v(" "),t("blockquote",[t("p",[e._v("你可以把服务器想象成有着严重脸盲症的东哥，他没有办法分清楚跟他说话的人之前做过什么")])]),e._v(" "),t("p",[e._v("于是，服务器想了一个办法")]),e._v(" "),t("p",[e._v("它按照下面的流程来认证客户端的身份")]),e._v(" "),t("ol",[t("li",[e._v("客户端登录成功后，服务器会给客户端一个出入证")]),e._v(" "),t("li",[e._v("后续客户端的每次请求，都必须要附带这个出入证")])]),e._v(" "),t("p",[t("img",{attrs:{src:"http://mdrs.yuanjin.tech/img/image-20200417161950450.png",alt:"img"}})]),e._v(" "),t("p",[e._v("服务器发扬了认证不认人的优良传统，就可以很轻松的识别身份了。")]),e._v(" "),t("p",[e._v("但是，用户不可能只在一个网站登录，于是客户端会收到来自各个网站的出入证，因此，就要求客户端要有一个类似于卡包的东西，能够具备下面的功能：")]),e._v(" "),t("ol",[t("li",[t("strong",[e._v("能够存放多个出入证")]),e._v("。这些出入证来自不同的网站，也可能是一个网站有多个出入证，分别用于出入不同的地方")]),e._v(" "),t("li",[t("strong",[e._v("能够自动出示出入证")]),e._v("。客户端在访问不同的网站时，能够自动的把对应的出入证附带请求发送出去。")]),e._v(" "),t("li",[t("strong",[e._v("正确的出示出入证")]),e._v("。客户端不能将肯德基的出入证发送给麦当劳。")]),e._v(" "),t("li",[t("strong",[e._v("管理出入证的有效期")]),e._v("。客户端要能够自动的发现那些已经过期的出入证，并把它从卡包内移除。")])]),e._v(" "),t("p",[e._v("能够满足上面所有要求的，就是cookie")]),e._v(" "),t("p",[e._v("cookie类似于一个卡包，专门用于存放各种出入证，并有着一套机制来自动管理这些证件。")]),e._v(" "),t("p",[e._v("卡包内的每一张卡片，称之为"),t("strong",[e._v("一个cookie")]),e._v("。")]),e._v(" "),t("h2",{attrs:{id:"cookie的组成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie的组成"}},[e._v("#")]),e._v(" cookie的组成")]),e._v(" "),t("p",[e._v("cookie是浏览器中特有的一个概念，它就像浏览器的专属卡包，管理着各个网站的身份信息。")]),e._v(" "),t("p",[e._v("每个cookie就相当于是属于某个网站的一个卡片，它记录了下面的信息：")]),e._v(" "),t("ul",[t("li",[e._v("key：键，比如「身份编号」")]),e._v(" "),t("li",[e._v("value：值，比如袁小进的身份编号「14563D1550F2F76D69ECBF4DD54ABC95」，这有点像卡片的条形码，当然，它可以是任何信息")]),e._v(" "),t("li",[e._v("domain：域，表达这个cookie是属于哪个网站的，比如"),t("code",[e._v("yuanjin.tech")]),e._v("，表示这个cookie是属于"),t("code",[e._v("yuanjin.tech")]),e._v("这个网站的")]),e._v(" "),t("li",[e._v("path：路径，表达这个cookie是属于该网站的哪个基路径的，就好比是同一家公司不同部门会颁发不同的出入证。比如"),t("code",[e._v("/news")]),e._v("，表示这个cookie属于"),t("code",[e._v("/news")]),e._v("这个路径的。（后续详细解释）")]),e._v(" "),t("li",[e._v("secure：是否使用安全传输（后续详细解释）")]),e._v(" "),t("li",[e._v("expire：过期时间，表示该cookie在什么时候过期")])]),e._v(" "),t("p",[e._v("当浏览器向服务器发送一个请求的时候，它会瞄一眼自己的卡包，看看哪些卡片适合附带捎给服务器")]),e._v(" "),t("p",[e._v("如果一个cookie"),t("strong",[e._v("同时满足")]),e._v("以下条件，则这个cookie会被附带到请求中")]),e._v(" "),t("ul",[t("li",[e._v("cookie没有过期")]),e._v(" "),t("li",[e._v("cookie中的域和这次请求的域是匹配的\n"),t("ul",[t("li",[e._v("比如cookie中的域是"),t("code",[e._v("yuanjin.tech")]),e._v("，则可以匹配的请求域是"),t("code",[e._v("yuanjin.tech")]),e._v("、"),t("code",[e._v("www.yuanjin.tech")]),e._v("、"),t("code",[e._v("blogs.yuanjin.tech")]),e._v("等等")]),e._v(" "),t("li",[e._v("比如cookie中的域是"),t("code",[e._v("www.yuanjin.tech")]),e._v("，则只能匹配"),t("code",[e._v("www.yuanjin.tech")]),e._v("这样的请求域")]),e._v(" "),t("li",[e._v("cookie是不在乎端口的，只要域匹配即可")])])]),e._v(" "),t("li",[e._v("cookie中的path和这次请求的path是匹配的\n"),t("ul",[t("li",[e._v("比如cookie中的path是"),t("code",[e._v("/news")]),e._v("，则可以匹配的请求路径可以是"),t("code",[e._v("/news")]),e._v("、"),t("code",[e._v("/news/detail")]),e._v("、"),t("code",[e._v("/news/a/b/c")]),e._v("等等，但不能匹配"),t("code",[e._v("/blogs")])]),e._v(" "),t("li",[e._v("如果cookie的path是"),t("code",[e._v("/")]),e._v("，可以想象，能够匹配所有的路径")])])]),e._v(" "),t("li",[e._v("验证cookie的安全传输\n"),t("ul",[t("li",[e._v("如果cookie的secure属性是true，则请求协议必须是"),t("code",[e._v("https")]),e._v("，否则不会发送该cookie")]),e._v(" "),t("li",[e._v("如果cookie的secure属性是false，则请求协议可以是"),t("code",[e._v("http")]),e._v("，也可以是"),t("code",[e._v("https")])])])])]),e._v(" "),t("p",[e._v("如果一个cookie满足了上述的所有条件，则浏览器会把它自动加入到这次请求中")]),e._v(" "),t("p",[e._v("具体加入的方式是，"),t("strong",[e._v("浏览器会将符合条件的cookie，自动放置到请求头中")]),e._v("，例如，当我在浏览器中访问百度的时候，它在请求头中附带了下面的cookie：")]),e._v(" "),t("p",[t("img",{attrs:{src:"http://mdrs.yuanjin.tech/img/image-20200417170328584.png",alt:"img"}})]),e._v(" "),t("p",[e._v("看到打马赛克的地方了吗？这部分就是通过请求头"),t("code",[e._v("cookie")]),e._v("发送到服务器的，它的格式是"),t("code",[e._v("键=值; 键=值; 键=值; ...")]),e._v("，每一个键值对就是一个符合条件的cookie。")]),e._v(" "),t("p",[e._v("**cookie中包含了重要的身份信息，永远不要把你的cookie泄露给别人！！！**否则，他人就拿到了你的证件，有了证件，就具备了为所欲为的可能性。")]),e._v(" "),t("h2",{attrs:{id:"如何设置cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何设置cookie"}},[e._v("#")]),e._v(" 如何设置cookie")]),e._v(" "),t("p",[e._v("由于cookie是保存在浏览器端的，同时，很多证件又是服务器颁发的")]),e._v(" "),t("p",[e._v("所以，cookie的设置有两种模式：")]),e._v(" "),t("ul",[t("li",[e._v("服务器响应：这种模式是非常普遍的，当服务器决定给客户端颁发一个证件时，它会在响应的消息中包含cookie，浏览器会自动的把cookie保存到卡包中")]),e._v(" "),t("li",[e._v("客户端自行设置：这种模式少见一些，不过也有可能会发生，比如用户关闭了某个广告，并选择了「以后不要再弹出」，此时就可以把这种小信息直接通过浏览器的JS代码保存到cookie中。后续请求服务器时，服务器会看到客户端不想要再次弹出广告的cookie，于是就不会再发送广告过来了。")])]),e._v(" "),t("h2",{attrs:{id:"服务器端设置cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务器端设置cookie"}},[e._v("#")]),e._v(" 服务器端设置cookie")]),e._v(" "),t("p",[e._v("服务器可以通过设置响应头，来告诉浏览器应该如何设置cookie")]),e._v(" "),t("p",[e._v("响应头按照下面的格式设置：")]),e._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("set-cookie")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" cookie1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("set-cookie")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" cookie2\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("set-cookie")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" cookie3\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("...")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[e._v("通过这种模式，就可以在一次响应中设置多个cookie了，具体设置多少个cookie，设置什么cookie，根据你的需要自行处理")]),e._v(" "),t("p",[e._v("其中，每个cookie的格式如下：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("键=值; path=?; domain=?; expire=?; max-age=?; secure; httponly\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("每个cookie除了键值对是必须要设置的，其他的属性都是可选的，并且顺序不限")]),e._v(" "),t("p",[e._v("当这样的响应头到达客户端后，"),t("strong",[e._v("浏览器会自动的将cookie保存到卡包中，如果卡包中已经存在一模一样的卡片（其他path、domain相同），则会自动的覆盖之前的设置")]),e._v("。")]),e._v(" "),t("p",[e._v("下面，依次说明每个属性值：")]),e._v(" "),t("ul",[t("li",[t("p",[t("strong",[e._v("path")]),e._v("：设置cookie的路径。如果不设置，浏览器会将其自动设置为当前请求的路径。比如，浏览器请求的地址是"),t("code",[e._v("/login")]),e._v("，服务器响应了一个"),t("code",[e._v("set-cookie: a=1")]),e._v("，浏览器会将该cookie的path设置为请求的路径"),t("code",[e._v("/login")])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("domain")]),e._v("：设置cookie的域。如果不设置，浏览器会自动将其设置为当前的请求域，比如，浏览器请求的地址是")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("http://www.yuanjin.tech\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("，服务器响应了一个")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("set-cookie: a=1\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("，浏览器会将该cookie的domain设置为请求的域")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("www.yuanjin.tech\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[e._v("这里值得注意的是，如果服务器响应了一个无效的域，浏览器是不认的")]),e._v(" "),t("li",[e._v("什么是无效的域？就是响应的域连根域都不一样。比如，浏览器请求的域是"),t("code",[e._v("yuanjin.tech")]),e._v("，服务器响应的cookie是"),t("code",[e._v("set-cookie: a=1; domain=baidu.com")]),e._v("，这样的域浏览器是不认的。")]),e._v(" "),t("li",[e._v("如果浏览器连这样的情况都允许，就意味着张三的服务器，有权利给用户一个cookie，用于访问李四的服务器，这会造成很多安全性的问题")])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("expire")]),e._v("：设置cookie的过期时间。这里必须是一个有效的GMT时间，即格林威治标准时间字符串，比如"),t("code",[e._v("Fri, 17 Apr 2020 09:35:59 GMT")]),e._v("，表示格林威治时间的"),t("code",[e._v("2020-04-17 09:35:59")]),e._v("，即北京时间的"),t("code",[e._v("2020-04-17 17:35:59")]),e._v("。当客户端的时间达到这个时间点后，会自动销毁该cookie。")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("max-age")]),e._v("：设置cookie的相对有效期。expire和max-age通常仅设置一个即可。比如设置"),t("code",[e._v("max-age")]),e._v("为"),t("code",[e._v("1000")]),e._v("，浏览器在添加cookie时，会自动设置它的"),t("code",[e._v("expire")]),e._v("为当前时间加上1000秒，作为过期时间。")]),e._v(" "),t("ul",[t("li",[e._v("如果不设置expire，又没有设置max-age，则表示会话结束后过期。")]),e._v(" "),t("li",[e._v("对于大部分浏览器而言，关闭所有浏览器窗口意味着会话结束。")])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("secure")]),e._v("：设置cookie是否是安全连接。如果设置了该值，则表示该cookie后续只能随着"),t("code",[e._v("https")]),e._v("请求发送。如果不设置，则表示该cookie会随着所有请求发送。")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("httponly")]),e._v("：设置cookie是否仅能用于传输。如果设置了该值，表示该cookie仅能用于传输，而不允许在客户端通过JS获取，这对防止跨站脚本攻击（XSS）会很有用。")]),e._v(" "),t("ul",[t("li",[e._v("关于如何通过JS获取，后续会讲解")])])]),e._v(" "),t("li",[t("p",[e._v("关于什么是XSS，不在本文讨论范围")])])]),e._v(" "),t("p",[e._v("下面来一个例子，客户端通过"),t("code",[e._v("post")]),e._v("请求服务器"),t("code",[e._v("http://yuanjin.tech/login")]),e._v("，并在消息体中给予了账号和密码，服务器验证登录成功后，在响应头中加入了以下内容：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("set-cookie: token=123456; path=/; max-age=3600; httponly\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("当该响应到达浏览器后，浏览器会创建下面的cookie：")]),e._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" token\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("123456")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("domain")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" yuanjin.tech\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("path")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" /\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("expire")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token datetime number"}},[e._v("2020-04-17 18:55:00")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#假设当前时间是2020-04-17 17:55:00")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("secure")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("false")]),e._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#任何请求都可以附带这个cookie，只要满足其他要求")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("httponly")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#不允许JS获取该cookie")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("于是，随着浏览器后续对服务器的请求，只要满足要求，这个cookie就会被附带到请求头中传给服务器：")]),e._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("cookie")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" token=123456; 其他cookie"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("...")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("现在，还剩下最后一个问题，就是如何删除浏览器的一个cookie呢？")]),e._v(" "),t("p",[e._v("如果要删除浏览器的cookie，只需要让服务器响应一个同样的域、同样的路径、同样的key，只是时间过期的cookie即可")]),e._v(" "),t("p",[t("strong",[e._v("所以，删除cookie其实就是修改cookie")])]),e._v(" "),t("p",[e._v("下面的响应会让浏览器删除"),t("code",[e._v("token")])]),e._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("set-cookie")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" token=; domain=yuanjin.tech; path=/; max"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("age="),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("浏览器按照要求修改了cookie后，会发现cookie已经过期，于是自然就会删除了。")]),e._v(" "),t("blockquote",[t("p",[e._v("无论是修改还是删除，都要注意cookie的域和路径，因为完全可能存在域或路径不同，但key相同的cookie")]),e._v(" "),t("p",[e._v("因此无法仅通过key确定是哪一个cookie")])]),e._v(" "),t("h2",{attrs:{id:"客户端设置cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#客户端设置cookie"}},[e._v("#")]),e._v(" 客户端设置cookie")]),e._v(" "),t("p",[e._v("既然cookie是存放在浏览器端的，所以浏览器向JS公开了接口，让其可以设置cookie")]),e._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[e._v("document"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("cookie "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"键=值; path=?; domain=?; expire=?; max-age=?; secure"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("可以看出，在客户端设置cookie，和服务器设置cookie的格式一样，只是有下面的不同")]),e._v(" "),t("ul",[t("li",[e._v("没有httponly。因为httponly本来就是为了限制在客户端访问的，既然你是在客户端配置，自然失去了限制的意义。")]),e._v(" "),t("li",[e._v("path的默认值。在服务器端设置cookie时，如果没有写path，使用的是请求的path。而在客户端设置cookie时，也许根本没有请求发生。因此，path在客户端设置时的默认值是当前网页的path")]),e._v(" "),t("li",[e._v("domain的默认值。和path同理，客户端设置时的默认值是当前网页的domain")]),e._v(" "),t("li",[e._v("其他：一样")]),e._v(" "),t("li",[e._v("删除cookie：和服务器也一样，修改cookie的过期时间即可")])]),e._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),t("p",[e._v("以上，就是cookie原理部分的内容。")]),e._v(" "),t("p",[e._v("如果把它用于登录场景，就是如下的流程：")]),e._v(" "),t("p",[t("strong",[e._v("登录请求")])]),e._v(" "),t("ol",[t("li",[e._v("浏览器发送请求到服务器，附带账号密码")]),e._v(" "),t("li",[e._v("服务器验证账号密码是否正确，如果不正确，响应错误，如果正确，在响应头中设置cookie，附带登录认证信息（至于登录认证信息是设么样的，如何设计，要考虑哪些问题，就是另一个话题了，可以百度 jwt）")]),e._v(" "),t("li",[e._v("客户端收到cookie，浏览器自动记录下来")])]),e._v(" "),t("p",[t("strong",[e._v("后续请求")])]),e._v(" "),t("ol",[t("li",[e._v("浏览器发送请求到服务器，希望添加一个管理员，并将cookie自动附带到请求中")]),e._v(" "),t("li",[e._v("服务器先获取cookie，验证cookie中的信息是否正确，如果不正确，不予以操作，如果正确，完成正常的业务流程")])]),e._v(" "),t("h2",{attrs:{id:"面试题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面试题"}},[e._v("#")]),e._v(" 面试题")]),e._v(" "),t("p",[e._v("cookie/sessionStorage/localStorage 的区别")]),e._v(" "),t("blockquote",[t("p",[e._v("参考答案：")]),e._v(" "),t("p",[e._v("cookie、sessionStorage、localStorage 都是保存本地数据的方式")]),e._v(" "),t("p",[e._v("其中，cookie 兼容性较好，所有浏览器均支持。浏览器针对 cookie 会有一些默认行为，比如当响应头中出现"),t("code",[e._v("set-cookie")]),e._v("字段时，浏览器会自动保存 cookie 的值；再比如，浏览器发送请求时，会附带匹配的 cookie 到请求头中。这些默认行为，使得 cookie 长期以来担任着维持登录状态的责任。与此同时，也正是因为浏览器的默认行为，给了恶意攻击者可乘之机，CSRF 攻击就是一个典型的利用 cookie 的攻击方式。"),t("br"),e._v("\n虽然 cookie 不断的改进，但前端仍然需要另一种更加安全的保存数据的方式"),t("br"),e._v("\nHTML5 新增了 sessionStorage 和 localStorage，前者用于保存会话级别的数据，后者用于更持久的保存数据。"),t("br"),e._v("\n浏览器针对它们没有任何默认行为，这样一来，就把保存数据、读取数据的工作交给了前端开发者，这就让恶意攻击者难以针对登录状态进行攻击。"),t("br"),e._v("\ncookie 的大小是有限制的，一般浏览器会限制同一个域下的 cookie 总量不超过 4KB，而 sessionStorage 和 localStorage 则拥有更大的空间，多数浏览器一般要求不超过 5MB~10MB。"),t("br"),e._v("\ncookie 会与 domain、path 关联，而 sessionStorage 和 localStorage 只与 domain 关联")])])])}),[],!1,null,null,null);a.default=s.exports}}]);