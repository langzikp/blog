(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{623:function(t,a,s){"use strict";s.r(a);var e=s(34),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"vue-虚拟-dom-的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-虚拟-dom-的理解"}},[t._v("#")]),t._v(" vue 虚拟 dom 的理解")]),t._v(" "),s("h3",{attrs:{id:"_1-什么是虚拟-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是虚拟-dom"}},[t._v("#")]),t._v(" 1. 什么是虚拟 dom？")]),t._v(" "),s("p",[t._v("虚拟 dom 本质上就是一个普通的 JS 对象，用于描述视图的界面结构")]),t._v(" "),s("p",[t._v("在 vue 中，每个组件都有一个"),s("code",[t._v("render")]),t._v("函数，每个"),s("code",[t._v("render")]),t._v("函数都会返回一个虚拟 dom 树，这也就意味着每个组件都对应一棵虚拟 DOM 树")]),t._v(" "),s("img",{staticStyle:{width:"50%",float:"none"},attrs:{src:"http://mdrs.yuanjin.tech/img/20210225140726.png",alt:"image-20210225140726003",align:"left"}}),t._v(" "),s("h3",{attrs:{id:"_2-为什么需要虚拟-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-为什么需要虚拟-dom"}},[t._v("#")]),t._v(" 2. 为什么需要虚拟 dom？")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("vue")]),t._v("中，渲染视图会调用"),s("code",[t._v("render")]),t._v("函数，这种渲染不仅发生在组件创建时，同时发生在视图依赖的数据更新时。如果在渲染时，直接使用真实"),s("code",[t._v("DOM")]),t._v("，由于真实"),s("code",[t._v("DOM")]),t._v("的创建、更新、插入等操作会带来大量的性能损耗，从而就会极大的降低渲染效率。")]),t._v(" "),s("p",[t._v("因此，"),s("code",[t._v("vue")]),t._v("在渲染时，使用虚拟 dom 来替代真实 dom，主要为解决渲染效率的问题。")]),t._v(" "),s("h3",{attrs:{id:"_3-虚拟-dom-是如何转换为真实-dom-的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-虚拟-dom-是如何转换为真实-dom-的"}},[t._v("#")]),t._v(" 3. 虚拟 dom 是如何转换为真实 dom 的？")]),t._v(" "),s("p",[t._v("在一个组件实例首次被渲染时，它先生成虚拟 dom 树，然后根据虚拟 dom 树创建真实 dom，并把真实 dom 挂载到页面中合适的位置，此时，每个虚拟 dom 便会对应一个真实的 dom。")]),t._v(" "),s("p",[t._v("如果一个组件受响应式数据变化的影响，需要重新渲染时，它仍然会重新调用 render 函数，创建出一个新的虚拟 dom 树，用新树和旧树对比，通过对比，vue 会找到最小更新量，然后更新必要的虚拟 dom 节点，最后，这些更新过的虚拟节点，会去修改它们对应的真实 dom")]),t._v(" "),s("p",[t._v("这样一来，就保证了对真实 dom 达到最小的改动。")]),t._v(" "),s("img",{staticStyle:{width:"50%",float:"none"},attrs:{src:"http://mdrs.yuanjin.tech/img/20210225144108.png",alt:"image-20210225144108143",align:"left"}}),t._v(" "),s("h3",{attrs:{id:"_4-模板和虚拟-dom-的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-模板和虚拟-dom-的关系"}},[t._v("#")]),t._v(" 4. 模板和虚拟 dom 的关系")]),t._v(" "),s("p",[t._v("vue 框架中有一个"),s("code",[t._v("compile")]),t._v("模块，它主要负责将模板转换为"),s("code",[t._v("render")]),t._v("函数，而"),s("code",[t._v("render")]),t._v("函数调用后将得到虚拟 dom。")]),t._v(" "),s("p",[t._v("编译的过程分两步：")]),t._v(" "),s("ol",[s("li",[t._v("将模板字符串转换成为"),s("code",[t._v("AST")])]),t._v(" "),s("li",[t._v("将"),s("code",[t._v("AST")]),t._v("转换为"),s("code",[t._v("render")]),t._v("函数")])]),t._v(" "),s("p",[t._v("如果使用传统的引入方式，则编译时间发生在组件第一次加载时，这称之为运行时编译。")]),t._v(" "),s("p",[t._v("如果是在"),s("code",[t._v("vue-cli")]),t._v("的默认配置下，编译发生在打包时，这称之为模板预编译。")]),t._v(" "),s("p",[t._v("编译是一个极其耗费性能的操作，预编译可以有效的提高运行时的性能，而且，由于运行的时候已不需要编译，"),s("code",[t._v("vue-cli")]),t._v("在打包时会排除掉"),s("code",[t._v("vue")]),t._v("中的"),s("code",[t._v("compile")]),t._v("模块，以减少打包体积")]),t._v(" "),s("p",[t._v("模板的存在，仅仅是为了让开发人员更加方便的书写界面代码")]),t._v(" "),s("p",[s("strong",[t._v("vue 最终运行的时候，最终需要的是 render 函数，而不是模板，因此，模板中的各种语法，在虚拟 dom 中都是不存在的，它们都会变成虚拟 dom 的配置")])]),t._v(" "),s("h2",{attrs:{id:"vue-中v-model-的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-中v-model-的原理"}},[t._v("#")]),t._v(" vue 中"),s("code",[t._v("v-model")]),t._v(" 的原理")]),t._v(" "),s("p",[s("code",[t._v("v-model")]),t._v("即可以作用于表单元素，又可作用于自定义组件，无论是哪一种情况，它都是一个语法糖，最终会生成一个属性和一个事件")]),t._v(" "),s("p",[s("strong",[t._v("当其作用于表单元素时")]),t._v("，"),s("code",[t._v("vue")]),t._v("会根据作用的表单元素类型而生成合适的属性和事件。例如，作用于普通文本框的时候，它会生成"),s("code",[t._v("value")]),t._v("属性和"),s("code",[t._v("input")]),t._v("事件，而当其作用于单选框或多选框时，它会生成"),s("code",[t._v("checked")]),t._v("属性和"),s("code",[t._v("change")]),t._v("事件。")]),t._v(" "),s("p",[s("code",[t._v("v-model")]),t._v("也可作用于自定义组件，"),s("strong",[t._v("当其作用于自定义组件时")]),t._v("，默认情况下，它会生成一个"),s("code",[t._v("value")]),t._v("属性和"),s("code",[t._v("input")]),t._v("事件。")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Comp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 等效于 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Comp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@input")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("data=$event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("开发者可以通过组件的"),s("code",[t._v("model")]),t._v("配置来改变生成的属性和事件")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Comp")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Comp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("model")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("prop")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认为 value")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"change"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认为 input")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Comp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 等效于 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Comp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":number")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@change")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("data=$event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"vue-响应式原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-响应式原理"}},[t._v("#")]),t._v(" vue 响应式原理")]),t._v(" "),s("blockquote",[s("p",[t._v("面试题：请阐述"),s("code",[t._v("vue2")]),t._v("响应式原理")])]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/reactivity.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue 官方阐述"),s("OutboundLink")],1)])]),t._v(" "),s("p",[s("strong",[t._v("响应式数据的最终目标")]),t._v("，是当对象本身或对象属性发生变化时，将会运行一些函数，最常见的就是 render 函数。")]),t._v(" "),s("p",[t._v("在具体实现上，vue 用到了"),s("strong",[t._v("几个核心部件")]),t._v("：")]),t._v(" "),s("ol",[s("li",[t._v("Observer")]),t._v(" "),s("li",[t._v("Dep")]),t._v(" "),s("li",[t._v("Watcher")]),t._v(" "),s("li",[t._v("Scheduler")])]),t._v(" "),s("h3",{attrs:{id:"observer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#observer"}},[t._v("#")]),t._v(" Observer")]),t._v(" "),s("p",[t._v("Observer 要实现的目标非常简单，就是把一个普通的对象转换为响应式的对象")]),t._v(" "),s("p",[t._v("为了实现这一点，Observer 把对象的每个属性通过"),s("code",[t._v("Object.defineProperty")]),t._v("转换为带有"),s("code",[t._v("getter")]),t._v("和"),s("code",[t._v("setter")]),t._v("的属性，这样一来，当访问或设置属性时，"),s("code",[t._v("vue")]),t._v("就有机会做一些别的事情。")]),t._v(" "),s("img",{staticStyle:{width:"50%",float:"none"},attrs:{src:"http://mdrs.yuanjin.tech/img/20210226153448.png",alt:"image-20210226153448807"}}),t._v(" "),s("p",[t._v("Observer 是 vue 内部的构造器，我们可以通过 Vue 提供的静态方法"),s("code",[t._v("Vue.observable( object )")]),t._v("间接的使用该功能。")]),t._v(" "),s("p",[t._v("在组件生命周期中，这件事发生在"),s("code",[t._v("beforeCreate")]),t._v("之后，"),s("code",[t._v("created")]),t._v("之前。")]),t._v(" "),s("p",[t._v("具体实现上，它会递归遍历对象的所有属性，以完成深度的属性转换。")]),t._v(" "),s("p",[t._v("由于遍历时只能遍历到对象的当前属性，因此无法监测到将来动态增加或删除的属性，因此"),s("code",[t._v("vue")]),t._v("提供了"),s("code",[t._v("$set")]),t._v("和"),s("code",[t._v("$delete")]),t._v("两个实例方法，让开发者通过这两个实例方法对已有响应式对象添加或删除属性。")]),t._v(" "),s("p",[t._v("对于数组，"),s("code",[t._v("vue")]),t._v("会更改它的隐式原型，之所以这样做，是因为 vue 需要监听那些可能改变数组内容的方法")]),t._v(" "),s("img",{staticStyle:{width:"50%",float:"none"},attrs:{src:"http://mdrs.yuanjin.tech/img/20210226154624.png",alt:"image-20210226154624015"}}),t._v(" "),s("p",[t._v("总之，Observer 的目标，就是要让一个对象，它属性的读取、赋值，内部数组的变化都要能够被 vue 感知到。")]),t._v(" "),s("h3",{attrs:{id:"dep"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dep"}},[t._v("#")]),t._v(" Dep")]),t._v(" "),s("p",[t._v("这里有两个问题没解决，就是读取属性时要做什么事，而属性变化时要做什么事，这个问题需要依靠 Dep 来解决。")]),t._v(" "),s("p",[t._v("Dep 的含义是"),s("code",[t._v("Dependency")]),t._v("，表示依赖的意思。")]),t._v(" "),s("p",[s("code",[t._v("Vue")]),t._v("会为响应式对象中的每个属性、对象本身、数组本身创建一个"),s("code",[t._v("Dep")]),t._v("实例，每个"),s("code",[t._v("Dep")]),t._v("实例都有能力做以下两件事：")]),t._v(" "),s("ul",[s("li",[t._v("记录依赖：是谁在用我")]),t._v(" "),s("li",[t._v("派发更新：我变了，我要通知那些用到我的人")])]),t._v(" "),s("p",[t._v("当读取响应式对象的某个属性时，它会进行依赖收集：有人用到了我")]),t._v(" "),s("p",[t._v("当改变某个属性时，它会派发更新：那些用我的人听好了，我变了")]),t._v(" "),s("img",{staticStyle:{width:"50%",float:"none"},attrs:{src:"http://mdrs.yuanjin.tech/img/20210226155852.png",alt:"image-20210226155852964"}}),t._v(" "),s("h3",{attrs:{id:"watcher"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#watcher"}},[t._v("#")]),t._v(" Watcher")]),t._v(" "),s("p",[t._v("这里又出现一个问题，就是 Dep 如何知道是谁在用我？")]),t._v(" "),s("p",[t._v("要解决这个问题，需要依靠另一个东西，就是 Watcher。")]),t._v(" "),s("p",[t._v("当某个函数执行的过程中，用到了响应式数据，响应式数据是无法知道是哪个函数在用自己的")]),t._v(" "),s("p",[t._v("因此，vue 通过一种巧妙的办法来解决这个问题")]),t._v(" "),s("p",[t._v("我们不要直接执行函数，而是把函数交给一个叫做 watcher 的东西去执行，watcher 是一个对象，每个这样的函数执行时都应该创建一个 watcher，通过 watcher 去执行")]),t._v(" "),s("p",[t._v("watcher 会设置一个全局变量，让全局变量记录当前负责执行的 watcher 等于自己，然后再去执行函数，在函数的执行过程中，如果发生了依赖记录"),s("code",[t._v("dep.depend()")]),t._v("，那么"),s("code",[t._v("Dep")]),t._v("就会把这个全局变量记录下来，表示：有一个 watcher 用到了我这个属性")]),t._v(" "),s("p",[t._v("当 Dep 进行派发更新时，它会通知之前记录的所有 watcher：我变了")]),t._v(" "),s("img",{staticStyle:{width:"50%",float:"none"},attrs:{src:"http://mdrs.yuanjin.tech/img/20210226161404.png",alt:"image-20210226161404327"}}),t._v(" "),s("p",[t._v("每一个"),s("code",[t._v("vue")]),t._v("组件实例，都至少对应一个"),s("code",[t._v("watcher")]),t._v("，该"),s("code",[t._v("watcher")]),t._v("中记录了该组件的"),s("code",[t._v("render")]),t._v("函数。")]),t._v(" "),s("p",[s("code",[t._v("watcher")]),t._v("首先会把"),s("code",[t._v("render")]),t._v("函数运行一次以收集依赖，于是那些在 render 中用到的响应式数据就会记录这个 watcher。")]),t._v(" "),s("p",[t._v("当数据变化时，dep 就会通知该 watcher，而 watcher 将重新运行 render 函数，从而让界面重新渲染同时重新记录当前的依赖。")]),t._v(" "),s("h3",{attrs:{id:"scheduler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scheduler"}},[t._v("#")]),t._v(" Scheduler")]),t._v(" "),s("p",[t._v("现在还剩下最后一个问题，就是 Dep 通知 watcher 之后，如果 watcher 执行重运行对应的函数，就有可能导致函数频繁运行，从而导致效率低下")]),t._v(" "),s("p",[t._v("试想，如果一个交给 watcher 的函数，它里面用到了属性 a、b、c、d，那么 a、b、c、d 属性都会记录依赖，于是下面的代码将触发 4 次更新：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"new data"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"new data"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"new data"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"new data"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("这样显然是不合适的，因此，watcher 收到派发更新的通知后，实际上不是立即执行对应函数，而是把自己交给一个叫调度器的东西")]),t._v(" "),s("p",[t._v("调度器维护一个执行队列，该队列同一个 watcher 仅会存在一次，队列中的 watcher 不是立即执行，它会通过一个叫做"),s("code",[t._v("nextTick")]),t._v("的工具方法，把这些需要执行的 watcher 放入到事件循环的微队列中，nextTick 的具体做法是通过"),s("code",[t._v("Promise")]),t._v("完成的")]),t._v(" "),s("blockquote",[s("p",[t._v("nextTick 通过 "),s("code",[t._v("this.$nextTick")]),t._v(" 暴露给开发者")]),t._v(" "),s("p",[t._v("nextTick 的具体处理方式见：https://cn.vuejs.org/v2/guide/reactivity.html#%E5%BC%82%E6%AD%A5%E6%9B%B4%E6%96%B0%E9%98%9F%E5%88%97")])]),t._v(" "),s("p",[t._v("也就是说，当响应式数据变化时，"),s("code",[t._v("render")]),t._v("函数的执行是异步的，并且在微队列中")]),t._v(" "),s("h3",{attrs:{id:"总体流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总体流程"}},[t._v("#")]),t._v(" 总体流程")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://mdrs.yuanjin.tech/img/20210226163936.png",alt:"image-20210226163936839"}})]),t._v(" "),s("h2",{attrs:{id:"vue-的-diff-算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-的-diff-算法"}},[t._v("#")]),t._v(" vue 的 diff 算法")]),t._v(" "),s("blockquote",[s("p",[t._v("参考回答：")]),t._v(" "),s("p",[t._v("当组件创建和更新时，vue 均会执行内部的 update 函数，该函数使用 render 函数生成的虚拟 dom 树，将新旧两树进行对比，找到差异点，最终更新到真实 dom")]),t._v(" "),s("p",[t._v("对比差异的过程叫 diff，vue 在内部通过一个叫 patch 的函数完成该过程")]),t._v(" "),s("p",[t._v("在对比时，vue 采用深度优先、同层比较的方式进行比对。")]),t._v(" "),s("p",[t._v("在判断两个节点是否相同时，vue 是通过虚拟节点的 key 和 tag 来进行判断的")]),t._v(" "),s("p",[t._v("具体来说，首先对根节点进行对比，如果相同则将旧节点关联的真实 dom 的引用挂到新节点上，然后根据需要更新属性到真实 dom，然后再对比其子节点数组；如果不相同，则按照新节点的信息递归创建所有真实 dom，同时挂到对应虚拟节点上，然后移除掉旧的 dom。")]),t._v(" "),s("p",[t._v("在对比其子节点数组时，vue 对每个子节点数组使用了两个指针，分别指向头尾，然后不断向中间靠拢来进行对比，这样做的目的是尽量复用真实 dom，尽量少的销毁和创建真实 dom。如果发现相同，则进入和根节点一样的对比流程，如果发现不同，则移动真实 dom 到合适的位置。")]),t._v(" "),s("p",[t._v("这样一直递归的遍历下去，直到整棵树完成对比。")])]),t._v(" "),s("h3",{attrs:{id:"diff的时机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff的时机"}},[t._v("#")]),t._v(" "),s("code",[t._v("diff")]),t._v("的时机")]),t._v(" "),s("p",[t._v("当组件创建时，以及依赖的属性或数据变化时，会运行一个函数，该函数会做两件事：")]),t._v(" "),s("ul",[s("li",[t._v("运行"),s("code",[t._v("_render")]),t._v("生成一棵新的虚拟 dom 树（vnode tree）")]),t._v(" "),s("li",[t._v("运行"),s("code",[t._v("_update")]),t._v("，传入虚拟 dom 树的根节点，对新旧两棵树进行对比，最终完成对真实 dom 的更新")])]),t._v(" "),s("p",[t._v("核心代码如下：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vue构造函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Vue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 其他代码")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("updateComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Watcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updateComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 其他代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[s("code",[t._v("diff")]),t._v("就发生在"),s("code",[t._v("_update")]),t._v("函数的运行过程中")]),t._v(" "),s("h3",{attrs:{id:"update函数在干什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update函数在干什么"}},[t._v("#")]),t._v(" "),s("code",[t._v("_update")]),t._v("函数在干什么")]),t._v(" "),s("p",[s("code",[t._v("_update")]),t._v("函数接收到一个"),s("code",[t._v("vnode")]),t._v("参数，这就是"),s("strong",[t._v("新")]),t._v("生成的虚拟 dom 树")]),t._v(" "),s("p",[t._v("同时，"),s("code",[t._v("_update")]),t._v("函数通过当前组件的"),s("code",[t._v("_vnode")]),t._v("属性，拿到"),s("strong",[t._v("旧")]),t._v("的虚拟 dom 树")]),t._v(" "),s("p",[s("code",[t._v("_update")]),t._v("函数首先会给组件的"),s("code",[t._v("_vnode")]),t._v("属性重新赋值，让它指向新树")]),t._v(" "),s("img",{staticStyle:{width:"50%",float:"none"},attrs:{src:"http://mdrs.yuanjin.tech/img/20210301193804.png",alt:"image-20210301193804498"}}),t._v(" "),s("p",[t._v("然后会判断旧树是否存在：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("不存在：说明这是第一次加载组件，于是通过内部的"),s("code",[t._v("patch")]),t._v("函数，直接遍历新树，为每个节点生成真实 DOM，挂载到每个节点的"),s("code",[t._v("elm")]),t._v("属性上")]),t._v(" "),s("img",{staticStyle:{width:"50%",float:"none"},attrs:{src:"http://mdrs.yuanjin.tech/img/20210301194237.png",alt:"image-20210301194237825"}})]),t._v(" "),s("li",[s("p",[t._v("存在：说明之前已经渲染过该组件，于是通过内部的"),s("code",[t._v("patch")]),t._v("函数，对新旧两棵树进行对比，以达到下面两个目标：")]),t._v(" "),s("ul",[s("li",[t._v("完成对所有真实 dom 的最小化处理")]),t._v(" "),s("li",[t._v("让新树的节点对应合适的真实 dom")])]),t._v(" "),s("img",{staticStyle:{width:"50%",float:"none"},attrs:{src:"http://mdrs.yuanjin.tech/img/20210301195003.png",alt:"image-20210301195003696"}})])]),t._v(" "),s("h3",{attrs:{id:"patch函数的对比流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#patch函数的对比流程"}},[t._v("#")]),t._v(" "),s("code",[t._v("patch")]),t._v("函数的对比流程")]),t._v(" "),s("p",[s("strong",[t._v("术语解释")]),t._v("：")]),t._v(" "),s("ol",[s("li",[t._v("「"),s("strong",[t._v("相同")]),t._v("」：是指两个虚拟节点的标签类型、"),s("code",[t._v("key")]),t._v("值均相同，但"),s("code",[t._v("input")]),t._v("元素还要看"),s("code",[t._v("type")]),t._v("属性")]),t._v(" "),s("li",[t._v("「"),s("strong",[t._v("新建元素")]),t._v("」：是指根据一个虚拟节点提供的信息，创建一个真实 dom 元素，同时挂载到虚拟节点的"),s("code",[t._v("elm")]),t._v("属性上")]),t._v(" "),s("li",[t._v("「"),s("strong",[t._v("销毁元素")]),t._v("」：是指："),s("code",[t._v("vnode.elm.remove()")])]),t._v(" "),s("li",[t._v("「"),s("strong",[t._v("更新")]),t._v("」：是指对两个虚拟节点进行对比更新，它"),s("strong",[t._v("仅发生")]),t._v("在两个虚拟节点「相同」的情况下。具体过程稍后描述。")]),t._v(" "),s("li",[t._v("「"),s("strong",[t._v("对比子节点")]),t._v("」：是指对两个虚拟节点的子节点进行对比，具体过程稍后描述")])]),t._v(" "),s("p",[s("strong",[t._v("详细流程：")])]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("根节点比较")])]),t._v(" "),s("img",{staticStyle:{width:"50%",float:"none"},attrs:{src:"http://mdrs.yuanjin.tech/img/20210301203350.png",alt:"image-20210301203350246"}}),t._v(" "),s("p",[s("code",[t._v("patch")]),t._v("函数首先对根节点进行比较")]),t._v(" "),s("p",[t._v("如果两个节点：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("「相同」，进入**「更新」流程**")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("将旧节点的真实 dom 赋值到新节点："),s("code",[t._v("newVnode.elm = oldVnode.elm")])])]),t._v(" "),s("li",[s("p",[t._v("对比新节点和旧节点的属性，有变化的更新到真实 dom 中")])]),t._v(" "),s("li",[s("p",[t._v("当前两个节点处理完毕，开始**「对比子节点」**")])])])]),t._v(" "),s("li",[s("p",[t._v("不「相同」")]),t._v(" "),s("ol",[s("li",[t._v("新节点"),s("strong",[t._v("递归")]),t._v("「新建元素」")]),t._v(" "),s("li",[t._v("旧节点「销毁元素」")])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("「对比子节点」")])]),t._v(" "),s("p",[t._v("在「对比子节点」时，vue 一切的出发点，都是为了：")]),t._v(" "),s("ul",[s("li",[t._v("尽量啥也别做")]),t._v(" "),s("li",[t._v("不行的话，尽量仅改动元素属性")]),t._v(" "),s("li",[t._v("还不行的话，尽量移动元素，而不是删除和创建元素")]),t._v(" "),s("li",[t._v("还不行的话，删除和创建元素")])])])]),t._v(" "),s("h2",{attrs:{id:"vue-生命周期详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-生命周期详解"}},[t._v("#")]),t._v(" vue 生命周期详解")]),t._v(" "),s("blockquote",[s("p",[t._v("面试题："),s("code",[t._v("new Vue")]),t._v("之后，发生了什么？数据改变后，又发生了什么？")])]),t._v(" "),s("img",{staticStyle:{width:"70%",float:"none"},attrs:{src:"http://mdrs.yuanjin.tech/img/20210302155735.png",alt:"image-20210302155735758"}}),t._v(" "),s("ol",[s("li",[s("p",[t._v("创建vue实例和创建组件的流程基本一致")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("首先做一些初始化的操作，主要是设置一些私有属性到实例中")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("运行生命周期钩子函数"),s("code",[t._v("beforeCreate")])])])]),t._v(" "),s("li",[s("p",[t._v("进入注入流程：处理属性、computed、methods、data、provide、inject，最后使用代理模式将它们挂载到实例中")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("运行生命周期钩子函数"),s("code",[t._v("created")])])])]),t._v(" "),s("li",[s("p",[t._v("生成"),s("code",[t._v("render")]),t._v("函数：如果有配置，直接使用配置的"),s("code",[t._v("render")]),t._v("，如果没有，使用运行时编译器，把模板编译为"),s("code",[t._v("render")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("运行生命周期钩子函数"),s("code",[t._v("beforeMount")])])])]),t._v(" "),s("li",[s("p",[t._v("创建一个"),s("code",[t._v("Watcher")]),t._v("，传入一个函数"),s("code",[t._v("updateComponent")]),t._v("，该函数会运行"),s("code",[t._v("render")]),t._v("，把得到的"),s("code",[t._v("vnode")]),t._v("再传入"),s("code",[t._v("_update")]),t._v("函数执行。")]),t._v(" "),s("p",[t._v("在执行"),s("code",[t._v("render")]),t._v("函数的过程中，会收集所有依赖，将来依赖变化时会重新运行"),s("code",[t._v("updateComponent")]),t._v("函数")]),t._v(" "),s("p",[t._v("在执行"),s("code",[t._v("_update")]),t._v("函数的过程中，触发"),s("code",[t._v("patch")]),t._v("函数，由于目前没有旧树，因此直接为当前的虚拟dom树的每一个普通节点生成elm属性，即真实dom。")]),t._v(" "),s("p",[t._v("如果遇到创建一个组件的vnode，则会进入组件实例化流程，该流程和创建vue实例流程基本相同，最终会把创建好的组件实例挂载vnode的"),s("code",[t._v("componentInstance")]),t._v("属性中，以便复用。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("运行生命周期钩子函数"),s("code",[t._v("mounted")])])])])])]),t._v(" "),s("li",[s("p",[t._v("重渲染？")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("数据变化后，所有依赖该数据的"),s("code",[t._v("Watcher")]),t._v("均会重新运行，这里仅考虑"),s("code",[t._v("updateComponent")]),t._v("函数对应的"),s("code",[t._v("Watcher")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Watcher")]),t._v("会被调度器放到"),s("code",[t._v("nextTick")]),t._v("中运行，也就是微队列中，这样是为了避免多个依赖的数据同时改变后被多次执行")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("运行生命周期钩子函数"),s("code",[t._v("beforeUpdate")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("updateComponent")]),t._v("函数重新执行")]),t._v(" "),s("p",[t._v("在执行"),s("code",[t._v("render")]),t._v("函数的过程中，会去掉之前的依赖，重新收集所有依赖，将来依赖变化时会重新运行"),s("code",[t._v("updateComponent")]),t._v("函数")]),t._v(" "),s("p",[t._v("在执行"),s("code",[t._v("_update")]),t._v("函数的过程中，触发"),s("code",[t._v("patch")]),t._v("函数。")]),t._v(" "),s("p",[t._v("新旧两棵树进行对比。")]),t._v(" "),s("p",[t._v("普通"),s("code",[t._v("html")]),t._v("节点的对比会导致真实节点被创建、删除、移动、更新")]),t._v(" "),s("p",[t._v("组件节点的对比会导致组件被创建、删除、移动、更新")]),t._v(" "),s("p",[t._v("当新组件需要创建时，进入实例化流程")]),t._v(" "),s("p",[t._v("当旧组件需要删除时，会调用旧组件的"),s("code",[t._v("$destroy")]),t._v("方法删除组件，该方法会先触发"),s("strong",[t._v("生命周期钩子函数"),s("code",[t._v("beforeDestroy")])]),t._v("，然后递归调用子组件的"),s("code",[t._v("$destroy")]),t._v("方法，然后触发"),s("strong",[t._v("生命周期钩子函数"),s("code",[t._v("destroyed")])])]),t._v(" "),s("p",[t._v("当组件属性更新时，相当于组件的"),s("code",[t._v("updateComponent")]),t._v("函数被重新触发执行，进入重渲染流程，和本节相同。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("运行生命周期钩子函数"),s("code",[t._v("updated")])])])])])])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("h2",{attrs:{id:"vue-computed详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-computed详解"}},[t._v("#")]),t._v(" vue computed详解")]),t._v(" "),s("blockquote",[s("p",[t._v("面试题：computed和methods有什么区别")])]),t._v(" "),s("p",[s("strong",[t._v("标准而浅显的回答")])]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("在使用时，computed当做属性使用，而methods则当做方法调用")]),t._v(" "),s("li",[t._v("computed可以具有getter和setter，因此可以赋值，而methods不行")]),t._v(" "),s("li",[t._v("computed无法接收多个参数，而methods可以")]),t._v(" "),s("li",[t._v("computed具有缓存，而methods没有")])])]),t._v(" "),s("p",[s("strong",[t._v("更接近底层原理的回答")])]),t._v(" "),s("blockquote",[s("p",[t._v("vue对methods的处理比较简单，只需要遍历methods配置中的每个属性，将其对应的函数使用bind绑定当前组件实例后复制其引用到组件实例中即可")]),t._v(" "),s("p",[t._v("而vue对computed的处理会稍微复杂一些。")]),t._v(" "),s("p",[t._v("当组件实例触发生命周期函数"),s("code",[t._v("beforeCreate")]),t._v("后，它会做一系列事情，其中就包括对computed的处理")]),t._v(" "),s("p",[t._v("它会遍历computed配置中的所有属性，为每一个属性创建一个Watcher对象，并传入一个函数，该函数的本质其实就是computed配置中的getter，这样一来，getter运行过程中就会收集依赖")]),t._v(" "),s("p",[t._v("但是和渲染函数不同，为计算属性创建的Watcher不会立即执行，因为要考虑到该计算属性是否会被渲染函数使用，如果没有使用，就不会得到执行。因此，在创建Watcher的时候，它使用了lazy配置，lazy配置可以让Watcher不会立即执行。")]),t._v(" "),s("p",[t._v("收到"),s("code",[t._v("lazy")]),t._v("的影响，Watcher内部会保存两个关键属性来实现缓存，一个是"),s("code",[t._v("value")]),t._v("，一个是"),s("code",[t._v("dirty")])]),t._v(" "),s("p",[s("code",[t._v("value")]),t._v("属性用于保存Watcher运行的结果，受"),s("code",[t._v("lazy")]),t._v("的影响，该值在最开始是"),s("code",[t._v("undefined")])]),t._v(" "),s("p",[s("code",[t._v("dirty")]),t._v("属性用于指示当前的"),s("code",[t._v("value")]),t._v("是否已经过时了，即是否为脏值，受"),s("code",[t._v("lazy")]),t._v("的影响，该值在最开始是"),s("code",[t._v("true")])]),t._v(" "),s("p",[t._v("Watcher创建好后，vue会使用代理模式，将计算属性挂载到组件实例中")]),t._v(" "),s("p",[t._v("当读取计算属性时，vue检查其对应的Watcher是否是脏值，如果是，则运行函数，计算依赖，并得到对应的值，保存在Watcher的value中，然后设置dirty为false，然后返回。")]),t._v(" "),s("p",[t._v("如果dirty为false，则直接返回watcher的value")]),t._v(" "),s("p",[t._v("巧妙的是，在依赖收集时，被依赖的数据不仅会收集到计算属性的Watcher，还会收集到组件的Watcher")]),t._v(" "),s("p",[t._v("当计算属性的依赖变化时，会先触发计算属性的Watcher执行，此时，它只需设置"),s("code",[t._v("dirty")]),t._v("为true即可，不做任何处理。")]),t._v(" "),s("p",[t._v("由于依赖同时会收集到组件的Watcher，因此组件会重新渲染，而重新渲染时又读取到了计算属性，由于计算属性目前已为dirty，因此会重新运行getter进行运算")]),t._v(" "),s("p",[t._v("而对于计算属性的setter，则极其简单，当设置计算属性时，直接运行setter即可")])]),t._v(" "),s("h2",{attrs:{id:"keep-alive件的作用和原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive件的作用和原理"}},[t._v("#")]),t._v(" keep-alive件的作用和原理")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://v2.cn.vuejs.org/v2/api/#keep-alive",target:"_blank",rel:"noopener noreferrer"}},[t._v("keep-alive"),s("OutboundLink")],1),t._v("\n组件是vue的内置组件，用于缓存内部组件实例。这样做的目的在于，keep-alive内部的组件切回时，不用重新创建组件实例，而直接使用缓存中的实例，一方面能够避免创建组件带来的开销，另一方面可以保留组件的状态。")]),t._v(" "),s("p",[t._v("keep-alive具有include和exclude属性，通过它们可以控制哪些组件进入缓存。另外它还提供了max属性，通过它可以设置最大缓存数，当缓存的实例超过该数时，vue会移除最久没有使用的组件缓存。")]),t._v(" "),s("p",[t._v("受keep-alive的影响，其内部所有嵌套的组件都具有两个生命周期钩子函数，分别是"),s("code",[t._v("activated")]),t._v("和"),s("code",[t._v("deactivated")]),t._v("，它们分别在组件激活和失活时触发。第一次"),s("code",[t._v("activated")]),t._v("触发是在"),s("code",[t._v("mounted")]),t._v("之后")]),t._v(" "),s("p",[t._v("在具体的实现上，keep-alive在内部维护了一个key数组和一个缓存对象")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// keep-alive 内部的声明周期函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("created")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cache "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("key数组记录目前缓存的组件key值，如果组件没有指定key值，则会为其自动生成一个唯一的key值")]),t._v(" "),s("p",[t._v("cache对象以key值为键，vnode为值，用于缓存组件对应的虚拟DOM")]),t._v(" "),s("p",[t._v("在keep-alive的渲染函数中，其基本逻辑是判断当前渲染的vnode是否有对应的缓存，如果有，从缓存中读取到对应的组件实例；如果没有则将其缓存。")]),t._v(" "),s("p",[t._v("当缓存数量超过max数值时，keep-alive会移除掉key数组的第一个元素")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" slot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$slots"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取默认插槽")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vnode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFirstComponentChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("slot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 得到插槽中的第一个组件的vnode")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComponentName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vnode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("componentOptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取组件名字")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" keys "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取当前的缓存对象和key数组")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取组件的key值，若没有，会按照规则自动生成")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有缓存")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重用组件实例")]),t._v("\n    vnode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("componentInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("componentInstance\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除key")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将key加入到数组末尾，这样是为了保证最近使用的组件在数组中靠后，反之靠前")]),t._v("\n    keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无缓存，进行缓存")]),t._v("\n    cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vnode\n    keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 超过最大缓存数量，移除第一个key对应的缓存")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pruneCacheEntry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_vnode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" vnode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);