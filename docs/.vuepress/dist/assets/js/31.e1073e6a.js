(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{465:function(t,s,a){"use strict";a.r(s);var e=a(34),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://www.webpackjs.com/concepts/",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack 官网"),a("OutboundLink")],1),a("br"),t._v(" "),a("a",{attrs:{href:"http://mdrs.yuanjin.tech/img/20210508151156.png",target:"_blank",rel:"noopener noreferrer"}},[t._v("技能树"),a("OutboundLink")],1),a("br"),t._v(" "),a("a",{attrs:{href:"https://tsejx.github.io/webpack-guidebook/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Webpack 知识图谱-博客"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("webpack是用来搭建前端工程的")]),t._v("\n它运行在node环境中，它所做的事情，简单来说，就是"),a("strong",[t._v("打包")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/img/webpack/1.jpg")}}),t._v(" "),a("p",[t._v("具体来说，就是以某个模块作为入口，根据入口分析出所有模块的依赖关系，然后对各种模块进行合并、压缩，形成最终的打包结果")]),t._v(" "),a("p",[a("strong",[t._v("在webpack的世界中，一切皆是模块")])]),t._v(" "),a("h2",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://www.webpackjs.com/configuration/mode/",target:"_blank",rel:"noopener noreferrer"}},[t._v("mode"),a("OutboundLink")],1),t._v("  模式")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.webpackjs.com/configuration/entry-context/",target:"_blank",rel:"noopener noreferrer"}},[t._v("entry和context"),a("OutboundLink")],1),t._v(" 入口和上下文")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.webpackjs.com/configuration/output/",target:"_blank",rel:"noopener noreferrer"}},[t._v("output"),a("OutboundLink")],1),t._v(" 输出")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.webpackjs.com/configuration/output/#outputpublicpath",target:"_blank",rel:"noopener noreferrer"}},[t._v("publicPath"),a("OutboundLink")],1),t._v(" 在使用file-loader或url-loader时，模块中的路径来自于某个loader或plugin，当产生路径时，loader或plugin只有相对于dist目录的路径，并不知道该路径将在哪个资源中使用，从而无法确定最终正确的路径")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("output")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该配置会为index.html中引入的<script> <link>等标签中的资源路径添加前缀")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("publicPath")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.webpackjs.com/concepts/loaders/",target:"_blank",rel:"noopener noreferrer"}},[t._v("loader"),a("OutboundLink")],1),a("br"),t._v("\nloader 用于对模块的源代码进行转换。"),a("br"),t._v('\nloader 可以使你在 import 或"加载"模块时预处理文件。')])])]),t._v(" "),a("blockquote",[a("p",[t._v("webapck的本质是一个模块打包工具, 所以webpack默认只能处理JS文件,不能处理其他文件,\n因为其他文件中没有模块的概念, 但是在企业开发中我们除了需要对JS进行打包以外,\n还有可能需要对图片/CSS等进行打包, 所以为了能够让webpack能够对其它的文件类型进行打包,\n在打包之前就必须将其它类型文件转换为webpack能够识别处理的模块,\n注意：loader都是用NodeJS编写的")])]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://www.webpackjs.com/concepts/plugins/",target:"_blank",rel:"noopener noreferrer"}},[t._v("plugin"),a("OutboundLink")],1),t._v("  插件"),a("br"),t._v("\n插件（plugin）是 webpack 的支柱功能。用于扩展webpack的功能。当然loader也是变相的扩展了webpack ，但是它只专注于转化文件这一个领域。"),a("br"),t._v("\n而plugin的功能更加的丰富，而不仅局限于资源的加载。一个插件就是一个类，可以在打包过程中的特定阶段执行。"),a("br"),t._v("\n从作用角度简单来讲：loader帮助我们加载文件资源，而plugins则是loader的延伸，并不限制于加载文件资源。丰富了loader的功能。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.webpackjs.com/configuration/devtool/#root",target:"_blank",rel:"noopener noreferrer"}},[t._v("devtool"),a("OutboundLink")],1),t._v(" 源码视图")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.webpackjs.com/configuration/resolve/",target:"_blank",rel:"noopener noreferrer"}},[t._v("resolve"),a("OutboundLink")],1),t._v("   解析相关的配置")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.webpackjs.com/configuration/resolve/#resolvealias",target:"_blank",rel:"noopener noreferrer"}},[t._v("alias"),a("OutboundLink")],1),t._v("  路径别名")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.webpackjs.com/configuration/resolve/#resolveextensions",target:"_blank",rel:"noopener noreferrer"}},[t._v("extensions"),a("OutboundLink")],1),t._v(" 缺省的文件和后缀名")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.webpackjs.com/configuration/resolve/#resolveextensions",target:"_blank",rel:"noopener noreferrer"}},[t._v("modules"),a("OutboundLink")],1),t._v(" webpack解析模块时应该搜索的目录"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("   "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建 import 或 require 的路径别名")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("alias")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"@"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'src'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"_"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" __dirname\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使的我们在引入资源时可省略后缀，按此配置顺序查找")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("extensions")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.wasm'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认值")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack 解析模块时应该搜索的目录")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("modules")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node_modules'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认值")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])])])])])]),t._v(" "),a("h2",{attrs:{id:"编译过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译过程"}},[t._v("#")]),t._v(" 编译过程")]),t._v(" "),a("p",[t._v("webpack 的作用是将源代码编译（构建、打包）成最终代码")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/img/webpack/2.jpg")}}),t._v(" "),a("p",[t._v("整个过程大致分为三个步骤")]),t._v(" "),a("ol",[a("li",[t._v("初始化")]),t._v(" "),a("li",[t._v("编译")]),t._v(" "),a("li",[t._v("输出")])]),t._v(" "),a("h3",{attrs:{id:"初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),a("p",[t._v("此阶段，webpack会将"),a("strong",[t._v("CLI参数")]),t._v("、"),a("strong",[t._v("配置文件")]),t._v("、"),a("strong",[t._v("默认配置")]),t._v("进行融合，形成一个最终的配置对象。")]),t._v(" "),a("p",[t._v("对配置的处理过程是依托一个第三方库"),a("code",[t._v("yargs")]),t._v("完成的")]),t._v(" "),a("p",[t._v("此阶段相对比较简单，主要是为接下来的编译阶段做必要的准备")]),t._v(" "),a("p",[t._v("目前，可以简单的理解为，初始化阶段主要用于产生一个最终的配置")]),t._v(" "),a("h3",{attrs:{id:"编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[t._v("#")]),t._v(" 编译")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("创建chunk")])])]),t._v(" "),a("p",[t._v("chunk是webpack在内部构建过程中的一个概念，译为"),a("code",[t._v("块")]),t._v("，它表示通过某个入口找到的所有依赖的统称。")]),t._v(" "),a("p",[t._v("根据入口模块（默认为"),a("code",[t._v("./src/index.js")]),t._v("）创建一个chunk")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/img/webpack/3.jpg"),width:"400"}}),t._v(" "),a("p",[t._v("每个chunk都有至少两个属性：")]),t._v(" "),a("ul",[a("li",[t._v("name：默认为main")]),t._v(" "),a("li",[t._v("id：唯一编号，开发环境和name相同，生产环境是一个数字，从0开始")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("strong",[t._v("构建所有依赖模块")])])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/img/webpack/4.jpg")}}),t._v(" "),a("blockquote",[a("p",[t._v("AST在线测试工具：https://astexplorer.net/")])]),t._v(" "),a("p",[t._v("简图\n"),a("img",{attrs:{src:t.$withBase("/img/webpack/5.jpg")}})]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("strong",[t._v("产生chunk assets")])])]),t._v(" "),a("p",[t._v("在第二步完成后，chunk中会产生一个模块列表，列表中包含了"),a("strong",[t._v("模块id")]),t._v("和"),a("strong",[t._v("模块转换后的代码")])]),t._v(" "),a("p",[t._v("接下来，webpack会根据配置为chunk生成一个资源列表，即"),a("code",[t._v("chunk assets")]),t._v("，资源列表可以理解为是生成到最终文件的文件名和文件内容")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/img/webpack/6.jpg")}}),t._v(" "),a("blockquote",[a("p",[t._v("chunk hash是根据所有chunk assets的内容生成的一个hash字符串"),a("br"),t._v("\nhash：一种算法，具体有很多分类，特点是将一个任意长度的字符串转换为一个固定长度的字符串，而且可以保证原始内容不变，产生的hash字符串就不变")])]),t._v(" "),a("p",[t._v("简图\n"),a("img",{attrs:{src:t.$withBase("/img/webpack/7.jpg")}})]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("strong",[t._v("合并chunk assets")])])]),t._v(" "),a("p",[t._v("将多个chunk的assets合并到一起，并产生一个总的hash")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/img/webpack/8.jpg")}}),t._v(" "),a("h3",{attrs:{id:"输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出"}},[t._v("#")]),t._v(" 输出")]),t._v(" "),a("p",[t._v("此步骤非常简单，webpack将利用node中的fs模块（文件处理模块），根据编译产生的总的assets，生成相应的文件。")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/img/webpack/9.jpg")}}),t._v(" "),a("h3",{attrs:{id:"总过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总过程"}},[t._v("#")]),t._v(" 总过程")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/img/webpack/10.jpg")}}),t._v(" "),a("img",{attrs:{src:t.$withBase("/img/webpack/11.jpg")}}),t._v(" "),a("h3",{attrs:{id:"涉及术语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#涉及术语"}},[t._v("#")]),t._v(" 涉及术语")]),t._v(" "),a("ol",[a("li",[t._v("module：模块，分割的代码单元，webpack中的模块可以是任何内容的文件，不仅限于JS")]),t._v(" "),a("li",[t._v("chunk：webpack内部构建模块的块，一个chunk中包含多个模块，这些模块是从入口模块通过依赖分析得来的")]),t._v(" "),a("li",[t._v("bundle：chunk构建好模块后会生成chunk的资源清单，清单中的每一项就是一个bundle，可以认为bundle就是最终生成的文件")]),t._v(" "),a("li",[t._v("hash：最终的资源清单所有内容联合生成的hash值")]),t._v(" "),a("li",[t._v("chunkhash：chunk生成的资源清单内容联合生成的hash值")]),t._v(" "),a("li",[t._v("chunkname：chunk的名称，如果没有配置则使用main")]),t._v(" "),a("li",[t._v("id：通常指chunk的唯一编号，如果在开发环境下构建，和chunkname相同；如果是生产环境下构建，则使用一个从0开始的数字进行编号")])])])}),[],!1,null,null,null);s.default=r.exports}}]);