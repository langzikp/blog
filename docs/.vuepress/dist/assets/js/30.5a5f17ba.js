(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{458:function(t,a,r){"use strict";r.r(a);var s=r(34),_=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_03-函数式编程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_03-函数式编程"}},[t._v("#")]),t._v(" 03-函数式编程")]),t._v(" "),r("h2",{attrs:{id:"编程范式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#编程范式"}},[t._v("#")]),t._v(" 编程范式")]),t._v(" "),r("ul",[r("li",[t._v("面向过程编程")]),t._v(" "),r("li",[t._v("面向对象编程")]),t._v(" "),r("li",[t._v("函数式编程")])]),t._v(" "),r("h2",{attrs:{id:"函数式编程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程"}},[t._v("#")]),t._v(" 函数式编程")]),t._v(" "),r("p",[t._v("把功能分解为一系列独立的函数，通过函数间相互调用来完成功能。")]),t._v(" "),r("h2",{attrs:{id:"特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),r("ul",[r("li",[t._v("函数是第一等公民"),r("br"),t._v("\n指函数跟其它的数据类型一样处于平等地位，可以赋值给其他变量，可以作为参数传入另一个函数，也可以作为别的函数的返回值。")]),t._v(" "),r("li",[t._v("函数是纯函数"),r("br"),t._v("\n指相同的输入总会得到相同的输出，并且不会产生副作用的函数。"),r("strong",[t._v("无副作用")]),t._v(" 指的是函数内部的操作不会对外部产生影响（如修改全局变量的值、修改 dom 节点等）。")])]),t._v(" "),r("h2",{attrs:{id:"为什么用函数式编程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么用函数式编程"}},[t._v("#")]),t._v(" 为什么用函数式编程")]),t._v(" "),r("ul",[r("li",[t._v("提高复用性和可扩展性")]),t._v(" "),r("li",[t._v("利于Tree-shaking")])])])}),[],!1,null,null,null);a.default=_.exports}}]);